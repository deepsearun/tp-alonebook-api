<?php

namespace app\model;

use think\Model;

class BaseModel extends Model
{
    protected $param = [];

    protected $cacheName = '';

    protected $page;

    protected $pageSize;

    protected $userId;

    /**
     * 初始化
     * BaseModel constructor.
     * @param array $data
     */
    public function __construct(array $data = [])
    {
        parent::__construct($data);
        $this->param = input();
        $this->cacheName = $this->createCacheKey();
        $this->page = input('page', 1, 'intval');
        $this->pageSize = input('pageSize', 10, 'intval');
        $this->userId = request()->userId;
    }

    /**
     * 解析爱好 in规则
     * @return false|string
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\DbException
     * @throws \think\db\exception\ModelNotFoundException
     */
    public function parseLikeIn()
    {
        $cid = request()->header('likeid');
        if (!$cid) return false;
        $category = (new Category())->where('pid', $cid)->select();
        if (!$category) return false;
        $in = "";
        foreach ($category as $item) {
            $in .= "{$item->id},";
        }
        return trim($in, ',');
    }

    /**
     * 生成缓存KEY
     * @param string $name
     * @return string
     */
    public function createCacheKey($name = 'key')
    {
        return md5($this->getName() . $name . http_build_query($this->param));
    }

    /**
     * 列表统一数据格式
     * @param array|Object $list
     * @param int|null $page
     * @param int|null $pageSize
     * @param int $total
     * @return array
     */
    public function showResArr($list = [], $total = 0, $page = null, $pageSize = null)
    {
        return [
            'list' => $list,
            'total' => $total ? $total : count($list),
            'page' => is_null($page) ? $this->page : $page,
            'pageSize' => is_null($pageSize) ? $this->pageSize : $pageSize
        ];
    }

    /**
     * 析构方法
     */
    public function __destruct()
    {
        parent::__destruct(); // TODO: Change the autogenerated stub
        $this->param = [];
    }
}